complex no
class complex {
    int real,img;
    public:complex(int i=0,int r=0){ real=r;img=i}
};
complex operator+(complex const& obj) {complex res; res.real=real+obj.real; res.img=img+obj.img;}
void print() {cout<<real<<+<<img<<i;}
main(){complex c1(6,9);c2(1,0);c3=c1+c2;c3.print()}
friend class
class base{
    int pri;
    public: int pub; base() {pri=10;pub=1;}
    friend class withbeni;
};
class withbeni{
    public:void print(base& obj){cout<<pri;cout<<pub;}
};
main () {base call;withbeni fr;fr.print(call);}
this point
class base {
    public: int x;
    base(int x) {
        this->x=x;
    }
}
void print () {
    cout<<this->x;
}
main () {
    base obj(10);
    obj.print();
}
void
class wall {
    int height, length;
    public:
        wall(int hgt, int len) {
            height=hgt;
            length=len;
        }
};
void wall(wall& obj) {
    height=obj.height;
    length=obj.length;
}
int calArea() {
    return height*length;
}
main () {
    wall wall1(10,6);
}

fun overloading
void add (int a,int b) {

}
void add (double a, double b) {

}
op overloading
void add(int a,int b) {}
void add(int a,int b,int c) {}